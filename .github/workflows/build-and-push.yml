name: ci

on:
  push:
    branches:
      - 'master'

env:
  IMAGE_NAME: gcr.io/private-figedi/coffeescrape
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup GitHub user
        run: |
          git config --local user.email "github-actions@users.noreply.github.com"
          git config --local user.name "GitHub Actions"

      - name: 'GCP Setup'
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_JSON_KEY }}
          export_default_credentials: true

      - name: Generate version commit
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm ci
          npm run release
          VERSION=$(cat package.json | jq -r '.version')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure docker 
        run: |
          gcloud auth configure-docker

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Push tags from version bump
        run: |
          git commit -am "chore: applying package updates [skip ci]"
          git pull --rebase origin master
          git push --follow-tags origin master

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@main
        with:
          image: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          service: coffeescrape
          region: europe-west1
          env_vars: NODE_ENV="production", TELEGRAM_TOKEN="${{ secrets.APP_TELEGRAM_TOKEN }}", TELEGRAM_DEFAULT_USER_ID="${{ secrets.APP_TELEGRAM_DEFAULT_USER_ID }}", DB_URI="${{ secrets.APP_DB_URI }}", DB_NAME="${{ secrets.APP_DB_NAME }}", DB_COLLECTION="${{ secrets.APP_DB_COLLECTION }}", AUTH_USER="${{ secrets.APP_AUTH_USER }}", AUTH_PASS="${{ secrets.APP_AUTH_PASS }}"

      - name: Undo pushes on failure
        if: failure()
        run: |
          git push origin :refs/tags/v${{ env.VERSION }}